openapi: "3.0.1"
info:
  title: "KBV HMRC Credential Issuer Private Api"
  version: "1.0"

paths:
  /question:
    get:
      summary: "Get question from HMRC"
      parameters:
        - $ref: "#/components/parameters/SessionHeader"
      responses:
        "200":
          description: "200 response"
      x-amazon-apigateway-request-validator: "Validate both"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        passthroughBehavior: "when_no_templates"
        type: "aws"
        credentials:
          Fn::Sub: ${ExecuteStateMachineRole.Arn}
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:states:action/StartSyncExecution
        requestTemplates:
          application/json:
            Fn::Sub: |-
              {
                "input": "{\"sessionId\": \"$input.params('session-id')\"}",
                "stateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-GetQuestion"
              }
        responses:
          "200":
            statusCode: 200
            responseTemplates:
              application/json:
                Fn::Sub: $input.path('$').output
  /answer:
    post:
      summary: "Post answer to HMRC"
      parameters:
        - $ref: "#/components/parameters/SessionHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - "key"
                - "value"
              type: "object"
              properties:
                key:
                  description: The unique identifier for the question
                  type: "string"
                value:
                  description: Answer provided by the user
                  type: "string"
      responses:
        "200":
          description: "200 response"
      x-amazon-apigateway-request-validator: "Validate both"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        passthroughBehavior: "when_no_templates"
        type: "aws"
        credentials:
          Fn::Sub: ${ExecuteStateMachineRole.Arn}
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:states:action/StartSyncExecution
        requestTemplates:
          application/json:
            Fn::Sub: |-
              {
                "input": "{\"sessionId\": \"$input.params('session-id')\", \"key\": \"$input.path('$.key')\", \"value\": \"$input.path('$.value')\"}",
                "stateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-PostAnswer"
              }
        responses:
          "200":
            statusCode: 200
            responseTemplates:
              application/json:
                Fn::Sub: $input.path('$').output
components:
  parameters:
    SessionHeader:
      name: "session-id"
      in: header
      description: "A UUID generated by the Session API to act as a primary key for the Session in DynamoDB"
      required: true
      schema:
        type: "string"
      examples:
        200:
          value: "1fbc5730-9d17-416d-b2ca-0be90e1e93f5"
        400:
          value: "fad21bea-bce9-4aa7-8889-d50c7d26616e"
        500:
          value: "f27b8afc-90ef-4e0f-83ad-00a2f5692590"
