{
  "Comment": "Post all answers to HMRC",
  "StartAt": "Fetch Unanswered Questions",
  "States": {
    "Fetch Unanswered Questions": {
      "Type": "Task",
      "Next": "Have all the questions been answered?",
      "Parameters": {
        "TableName": "${QuestionsTableName}",
        "KeyConditionExpression": "sessionId = :value",
        "FilterExpression": "answered = :answeredValue",
        "ExpressionAttributeValues": {
          ":value": {
            "S.$": "$.sessionId"
          },
          ":answeredValue": {
            "S": "false"
          }
        }
      },
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
      "ResultPath": "$.questions"
    },
    "Have all the questions been answered?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.questions.Count",
          "NumericGreaterThan": 0,
          "Next": "Do nothing"
        }
      ],
      "Default": "Fetch All Answered Questions"
    },
    "Fetch All Answered Questions": {
      "Type": "Task",
      "Next": "Fetch HMRC Bearer Token",
      "Parameters": {
        "TableName": "${QuestionsTableName}",
        "KeyConditionExpression": "sessionId = :value",
        "FilterExpression": "answered = :answeredValue",
        "ExpressionAttributeValues": {
          ":value": {
            "S.$": "$.sessionId"
          },
          ":answeredValue": {
            "S": "true"
          }
        }
      },
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
      "ResultPath": "$.questions"
    },
    "Fetch HMRC Bearer Token": {
      "Type": "Task",
      "Next": "Fetch API URL and UserAgent",
      "Parameters": {
        "SecretId": "${BearerTokenName}"
      },
      "Resource": "arn:aws:states:::aws-sdk:secretsmanager:getSecretValue",
      "ResultSelector": {
        "value.$": "$.SecretString"
      },
      "ResultPath": "$.oAuthToken"
    },
    "Do nothing": {
      "Type": "Pass",
      "End": true
    },
    "Fetch API URL and UserAgent": {
      "Type": "Task",
      "Parameters": {
        "Names": ["${AnswersUrlName}", "${UserAgentName}"]
      },
      "Resource": "arn:aws:states:::aws-sdk:ssm:getParameters",
      "Next": "Submit Answers to HMRC",
      "ResultSelector": {
        "url.$": "$.Parameters[0].Value",
        "userAgent.$": "$.Parameters[1].Value"
      },
      "ResultPath": "$.parameters"
    },
    "Submit Answers to HMRC": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${PostIvqAnswersLambdaArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Create Result Loop Counter",
      "ResultSelector": {
        "Payload.$": "$.Payload"
      }
    },
    "Create Result Loop Counter": {
      "Type": "Pass",
      "Next": "Do we have results to loop over?",
      "Parameters": {
        "index": 0,
        "count.$": "States.ArrayLength($.Payload)"
      },
      "ResultPath": "$.iterator"
    },
    "Do we have results to loop over?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.iterator.index",
          "NumericLessThanPath": "$.iterator.count",
          "Next": "Get Question Score"
        }
      ],
      "Default": "Finished processing HMRC Response"
    },
    "Get Question Score": {
      "Type": "Pass",
      "Next": "Store Question Score",
      "Parameters": {
        "Payload.$": "$.Payload",
        "iterator.$": "$.iterator",
        "currentQuestion.$": "States.ArrayGetItem($.Payload, $.iterator.index)"
      }
    },
    "Store Question Score": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${QuestionsTableName}",
        "Key": {
          "sessionId": {
            "S.$": "$$.Execution.Input.sessionId"
          },
          "questionKey": {
            "S.$": "$.currentQuestion.questionKey"
          }
        },
        "UpdateExpression": "SET score = :score",
        "ExpressionAttributeValues": {
          ":score": {
            "S.$": "$.currentQuestion.score"
          }
        }
      },
      "Next": "Increment Loop Index",
      "ResultPath": "$.result"
    },
    "Increment Loop Index": {
      "Type": "Pass",
      "Parameters": {
        "count.$": "$.iterator.count",
        "index.$": "States.MathAdd($.iterator.index, 1)"
      },
      "ResultPath": "$.iterator",
      "Next": "Should we continue looping?"
    },
    "Should we continue looping?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.iterator.index",
          "NumericEqualsPath": "$.iterator.count",
          "Next": "Finished processing HMRC Response"
        }
      ],
      "Default": "Get Question Score"
    },
    "Finished processing HMRC Response": {
      "Type": "Pass",
      "End": true
    }
  }
}
