{
  "Comment": "Return any unanswered question if available.",
  "StartAt": "Check Session ID field present",
  "States": {
    "Check Session ID field present": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "Variable": "$.sessionId",
            "IsPresent": true
          },
          "Next": "Error: Missing sessionId"
        }
      ],
      "Default": "Get NINO"
    },
    "Get NINO": {
      "Type": "Task",
      "Parameters": {
        "TableName": "${PersonalIdentityTableName}",
        "KeyConditionExpression": "sessionId = :value",
        "ExpressionAttributeValues": {
          ":value": {
            "S.$": "$.sessionId"
          }
        }
      },
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
      "ResultPath": "$.nino",
      "Next": "Check NINO field present"
    },
    "Check NINO field present": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "Variable": "$.nino.Count",
            "NumericGreaterThan": 0
          },
          "Next": "Error: Missing nino"
        }
      ],
      "Default": "Filter out DynamoDB jargon"
    },
    "Filter out DynamoDB jargon": {
      "Type": "Pass",
      "Next": "GET Questions from HMRC",
      "Parameters": {
        "sessionId.$": "$.sessionId",
        "nino.$": "$.nino.Items[0].nino.S"
      }
    },
    "Error: Missing nino": {
      "Type": "Pass",
      "End": true
    },
    "GET Questions from HMRC": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${ExecuteStateMachineFunctionName}",
        "Payload": {
          "stateMachineArn": "${GetIvqQuestionsStateMachineArn}",
          "input": {
            "sessionId.$": "$.sessionId",
            "nino.$": "$.nino"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Get unanswered questions",
      "ResultPath": null
    },
    "Get unanswered questions": {
      "Type": "Task",
      "Next": "Check if we have any unanswered questions",
      "Parameters": {
        "TableName": "${QuestionsTableName}",
        "KeyConditionExpression": "sessionId = :value",
        "FilterExpression": "answered = :answeredValue",
        "ExpressionAttributeValues": {
          ":value": {
            "S.$": "$.sessionId"
          },
          ":answeredValue": {
            "S": "false"
          }
        }
      },
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:query"
    },
    "Error: Missing sessionId": {
      "Type": "Pass",
      "End": true
    },
    "Check if we have any unanswered questions": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Count",
          "NumericGreaterThan": 0,
          "Next": "HTTP 200"
        }
      ],
      "Default": "HTTP 204 NO CONTENT"
    },
    "HTTP 200": {
      "Type": "Pass",
      "End": true,
      "OutputPath": "$.Items[0]"
    },
    "HTTP 204 NO CONTENT": {
      "Type": "Pass",
      "End": true
    }
  }
}
