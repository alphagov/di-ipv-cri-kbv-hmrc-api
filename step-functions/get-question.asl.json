{
  "Comment": "Return any unanswered question if available.",
  "StartAt": "Get NINO",
  "States": {
    "Get NINO": {
      "Type": "Task",
      "Parameters": {
        "TableName": "${PersonalIdentityTableName}",
        "KeyConditionExpression": "sessionId = :value",
        "ExpressionAttributeValues": {
          ":value": {
            "S.$": "$.sessionId"
          }
        }
      },
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
      "ResultPath": "$.nino",
      "Next": "Check NINO field present"
    },
    "Check NINO field present": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "Variable": "$.nino.Count",
            "NumericGreaterThan": 0
          },
          "Next": "Err: Missing nino"
        }
      ],
      "Default": "Filter out DynamoDB jargon"
    },
    "Filter out DynamoDB jargon": {
      "Type": "Pass",
      "Next": "GET Questions from HMRC",
      "Parameters": {
        "sessionId.$": "$.sessionId",
        "nino.$": "$.nino.Items[0].nino.S"
      }
    },
    "Err: Missing nino": {
      "Type": "Fail",
      "Cause": "No NINO found for given session-id"
    },
    "GET Questions from HMRC": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${ExecuteStateMachineFunctionName}",
        "Payload": {
          "stateMachineArn": "${GetIvqQuestionsStateMachineArn}",
          "input": {
            "sessionId.$": "$.sessionId",
            "nino.$": "$.nino"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Get unanswered questions",
      "ResultPath": null,
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "Err: Lambda threw exception"
        }
      ]
    },
    "Err: Lambda threw exception": {
      "Type": "Fail"
    },
    "Get unanswered questions": {
      "Type": "Task",
      "Next": "Check if we have any unanswered questions",
      "Parameters": {
        "TableName": "${QuestionsTableName}",
        "KeyConditionExpression": "sessionId = :value",
        "FilterExpression": "answered = :answeredValue",
        "ExpressionAttributeValues": {
          ":value": {
            "S.$": "$.sessionId"
          },
          ":answeredValue": {
            "S": "false"
          }
        }
      },
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:query"
    },
    "Check if we have any unanswered questions": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Count",
          "NumericGreaterThan": 0,
          "Next": "Return Next Question"
        }
      ],
      "Default": "204: No More Questions"
    },
    "Return Next Question": {
      "Type": "Pass",
      "OutputPath": "$.Items[0]",
      "End": true
    },
    "204: No More Questions": {
      "Type": "Pass",
      "End": true,
      "Parameters": 204
    }
  }
}
