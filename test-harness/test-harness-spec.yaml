openapi: 3.0.1

info:
  title:
    Fn::Sub: "${AWS::StackName} - HMRC KBV Test Harness Private API"
  version: "1.0"
  description: HMRC KBV Return Test automation harness API specification

x-amazon-apigateway-globals:
  servers:
    - url: https://www.example.com

tags:
  - name: Testing - API to enable automation
    description: Endpoint implemented to enable testing

x-amazon-apigateway-policy:
  Version: "2012-10-17"
  Statement:
  - Effect: "Deny"
    Principal:
      AWS:  "*"
    Action: "execute-api:Invoke"
    Resource: "execute-api:/*"
    Condition:
      StringNotEquals:
        "aws:PrincipalAccount":
          - "${AWS::AccountId}"
  - Effect: "Allow"
    Principal:
      AWS:  "*"
    Action: "execute-api:Invoke"
    Resource: "execute-api:/*"

paths:
  getRecordBySessionId/{tableName}/{sessionId}:
    get:
      operationId: getRecordBySessionId
      summary: Get a database record by using sessionId-index from DynamoDB
      description: |
        Endpoint to get a database record from DynamoDB using sessionId as the primary key
      parameters:
        - name: tableName
          in: path
          description: The name of the table to find the record in DynamoDB
          required: true
          schema:
            type: string
        - name: sessionId
          in: path
          description: The value of the secondary index identifier to find the record in DynamoDB
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  session:
                    type: object
                    description: The found session from DynamoDB.
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
        - sigv4Reference: []
      x-amazon-apigateway-request-validator: "requestParamsOnly"
      x-amazon-apigateway-integration:
        httpMethod: POST
        credentials:
          Fn::GetAtt: [ "DynamoDbAccessRole", "Arn" ]
        uri: "arn:aws:apigateway:${AWS::Region}:dynamodb:action/Query"
        passthroughBehavior: when_no_match
        requestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
          integration.request.path.tableName: "method.request.path.tableName"
          integration.request.path.sessionId: "method.request.path.sessionId"
        requestTemplates:
          application/json: |
            {
              "TableName":"$input.params('tableName')",
              "IndexName":"sessionId-index",
              "KeyConditionExpression": "sessionId = :sessionId",
              "ExpressionAttributeValues":{
                  ":sessionId":{
                    "S":"$input.params('sessionId')"
                  }
              }
            }
        responses:
          default:
            statusCode: "200"
        type: aws

components:
  securitySchemes:
    sigv4Reference:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: awsSigv4

x-amazon-apigateway-request-validators:
    both:
      validateRequestBody: true
      validateRequestParameters: true
    requestBodyOnly:
      validateRequestBody: true
      validateRequestParameters: false
    requestParamsOnly:
      validateRequestBody: false
      validateRequestParameters: true
