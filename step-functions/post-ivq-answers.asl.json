{
  "Comment": "Post all answers to HMRC",
  "StartAt": "Get all Unanswered Questions",
  "States": {
    "Get all Unanswered Questions": {
      "Type": "Task",
      "Next": "All Questions Answered?",
      "Parameters": {
        "TableName": "${QuestionsTableName}",
        "KeyConditionExpression": "sessionId = :value",
        "FilterExpression": "answered = :answeredValue",
        "ExpressionAttributeValues": {
          ":value": {
            "S.$": "$.sessionId"
          },
          ":answeredValue": {
            "S": "false"
          }
        }
      },
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
      "ResultPath": "$.questions"
    },
    "All Questions Answered?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.questions.Count",
          "NumericGreaterThan": 0,
          "Next": "Nothing left to do"
        }
      ],
      "Default": "Get all Answered Questions"
    },
    "Get all Answered Questions": {
      "Type": "Task",
      "Next": "Fetch Bearer Token",
      "Parameters": {
        "TableName": "${QuestionsTableName}",
        "KeyConditionExpression": "sessionId = :value",
        "FilterExpression": "answered = :answeredValue",
        "ExpressionAttributeValues": {
          ":value": {
            "S.$": "$.sessionId"
          },
          ":answeredValue": {
            "S": "true"
          }
        }
      },
      "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
      "ResultPath": "$.questions"
    },
    "Fetch Bearer Token": {
      "Type": "Task",
      "Next": "Fetch API URL and User Agent",
      "Parameters": {
        "SecretId": "${BearerTokenName}"
      },
      "Resource": "arn:aws:states:::aws-sdk:secretsmanager:getSecretValue",
      "ResultSelector": {
        "value.$": "$.SecretString"
      },
      "ResultPath": "$.oAuthToken"
    },
    "Nothing left to do": {
      "Type": "Pass",
      "End": true,
      "Result": {}
    },
    "Fetch API URL and User Agent": {
      "Type": "Task",
      "Parameters": {
        "Names": ["${AnswersUrlName}", "${UserAgentName}"]
      },
      "Resource": "arn:aws:states:::aws-sdk:ssm:getParameters",
      "Next": "Post answers to HMRC",
      "ResultSelector": {
        "url.$": "$.Parameters[0].Value",
        "userAgent.$": "$.Parameters[1].Value"
      },
      "ResultPath": "$.parameters"
    },
    "Post answers to HMRC": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${PostIvqAnswersLambdaArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Store Result",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "Err: Lambda threw exception"
        }
      ]
    },
    "Err: Lambda threw exception": {
      "Type": "Fail"
    },
    "Store Result": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Update Question",
        "States": {
          "Update Question": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:updateItem",
            "Parameters": {
              "TableName": "${QuestionsTableName}",
              "Key": {
                "sessionId": {
                  "S.$": "$$.Execution.Input.sessionId"
                },
                "questionKey": {
                  "S.$": "$.questionKey"
                }
              },
              "UpdateExpression": "SET score = :score",
              "ExpressionAttributeValues": {
                ":score": {
                  "S.$": "$.score"
                }
              }
            },
            "End": true
          }
        }
      },
      "InputPath": "$",
      "Next": "Nothing left to do"
    }
  }
}
