AWSTemplateFormatVersion: "2010-09-09"
Description: Digital Identity IPV CRI KBV HMRC API
Transform: [AWS::LanguageExtensions, AWS::Serverless-2016-10-31]

Parameters:
  BearerTokenName:
    Type: String
    Default: HMRCBearerToken
    Description: >-
      The name of the bearer token parameter.
      Temporary solution to be changed once cross account behaviour implemented.
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, build, staging, integration, production]
  AuditEventNamePrefix:
    Description: "The audit event name prefix"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/AuditEventNamePrefix"
  CriIdentifier:
    Description: "The unique credential issuer identifier"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/CriIdentifier"
  CommonStackName:
    Type: String
    Default: common-cri-api
    Description: The name of the stack containing the common CRI lambdas/infra
  CodeSigningConfigArn:
    Type: String
    Default: ""
  PermissionsBoundary:
    Type: String
    Default: ""

Conditions:
  EnforceCodeSigning: !Not [!Equals [!Ref CodeSigningConfigArn, ""]]
  UsePermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, ""]]
  IsDevEnvironment: !Equals [!Ref Environment, dev]

Globals:
  Function:
    Timeout: 3
    CodeUri: ..
    Runtime: nodejs18.x
    Architectures: [arm64]
    PermissionsBoundary:
      !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
    Layers:
      - !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}"
        - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
    Environment:
      Variables:
        NODE_OPTIONS: --enable-source-maps
        AWS_STACK_NAME: !Sub ${AWS::StackName}
        POWERTOOLS_LOG_LEVEL: INFO
        SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
        SQS_AUDIT_EVENT_PREFIX: !Ref AuditEventNamePrefix
        POWERTOOLS_METRICS_NAMESPACE: !Ref CriIdentifier
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: true
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]

Mappings:
  # Only numeric values should be assigned here
  MaxJwtTtl:
    Environment:
      dev: 2
      build: 2
      staging: 6
      integration: 6
      production: 6

  # Permitted values: SECONDS,MINUTES,HOURS,DAYS,MONTHS,YEARS
  JwtTtlUnit:
    Environment:
      dev: HOURS
      build: HOURS
      staging: MONTHS
      integration: MONTHS
      production: MONTHS

  Dynatrace:
    SecretArn:
      dev: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      build: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      staging: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      integration: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      production: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

Resources:
  ####################################################################
  #                                                                  #
  # API Gateway                                                      #
  #                                                                  #
  ####################################################################

  PublicKbvHmrcApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Public KBV HMRC CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !GetAtt PublicKbvHmrcApiAccessLogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub ${AWS::StackName}-public
      StageName: !Ref Environment
      DefinitionBody:
        openapi: 3.0.1
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: public-api.yaml
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  PublicKbvHmrcApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/apigateway/${AWS::StackName}-${PublicKbvHmrcApi}-public-AccessLogs
      RetentionInDays: 365

  PrivateKbvHmrcApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Private KBV HMRC CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !GetAtt PrivateKbvHmrcApiAccessLogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub ${AWS::StackName}-private
      StageName: !Ref Environment
      DefinitionBody:
        openapi: 3.0.1
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: private-api.yaml
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: !If [IsDevEnvironment, REGIONAL, PRIVATE]
      Auth:
        ResourcePolicy: !If
          - IsDevEnvironment
          - !Ref AWS::NoValue
          - CustomStatements:
              - Effect: Allow
                Resource: execute-api:/*
                Action: execute-api:Invoke
                Principal: "*"

  PrivateKbvHmrcApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/apigateway/${AWS::StackName}-${PrivateKbvHmrcApi}-private-AccessLogs
      RetentionInDays: 365

  ExecuteStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to allow API gateway to execute step functions
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: apigateway.amazonaws.com
      Policies:
        - PolicyName: AllowStateMachineInvoke
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - states:StartExecution
                  - states:StartSyncExecution
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  ExecuteStateMachineFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Timeout: 60
      Handler: lambdas/execute-state-machine/src/execute-state-machine-handler.lambdaHandler
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - states:StartSyncExecution
              - states:StartExecution
            Resource:
              - !Ref FetchQuestionsStateMachine
              - !Ref PostIvqAnswersStateMachine

  ####################################################################
  #                                                                  #
  # FetchQuestionsStateMachine                                      #
  #                                                                  #
  ####################################################################

  FetchQuestionsStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      Name: !Sub ${AWS::StackName}-FetchQuestionsStateMachine
      DefinitionUri: ../step-functions/fetch-questions.asl.json
      DefinitionSubstitutions:
        QuestionsTableName: !Ref QuestionsTable
        QuestionsUrl: !Ref QuestionsUrl
        UserAgent: !Ref UserAgent
        FetchQuestionsArn: !GetAtt FetchQuestionsFunction.Arn
        BearerTokenName: !Ref BearerTokenName
        SessionTtl: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTtl}}"
        SessionTableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        PersonIdentityTableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt FetchQuestionsStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Ref QuestionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BearerTokenName}-??????
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchQuestionsFunction
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTtl"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${QuestionsUrl}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${UserAgent}
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  FetchQuestionsStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-FetchQuestionsStateMachine-logs
      RetentionInDays: 365

  ####################################################################
  #                                                                  #
  # CheckSessionStateMachine                                         #
  #                                                                  #
  ####################################################################

  CheckSessionStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      Name: !Sub ${AWS::StackName}-CheckSession
      DefinitionUri: ../step-functions/check_session.asl.json
      DefinitionSubstitutions:
        CurrentTimeFunctionArn: !GetAtt CurrentTimeFunction.Arn
        CommonStackName: !Ref CommonStackName
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt CheckSessionStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref CurrentTimeFunction
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  CheckSessionStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-CheckSession-state-machine-logs
      RetentionInDays: 30

  ####################################################################
  #                                                                  #
  # GetQuestionStateMachine                                          #
  #                                                                  #
  ####################################################################

  GetQuestionStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      Name: !Sub ${AWS::StackName}-GetQuestion
      DefinitionUri: ../step-functions/get-question.asl.json
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt GetQuestionStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
        # - DynamoDBReadPolicy:
        #     TableName: !Ref PersonalIdentityTable
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt FetchQuestionsStateMachine.Name
        - LambdaInvokePolicy:
            FunctionName: !Ref ExecuteStateMachineFunction
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      DefinitionSubstitutions:
        # PersonalIdentityTableName: !Ref PersonalIdentityTable
        ExecuteStateMachineFunctionName: !Ref ExecuteStateMachineFunction
        QuestionsTableName: !Ref QuestionsTable
        FetchQuestionsStateMachineArn: !Ref FetchQuestionsStateMachine

  GetQuestionStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-GetQuestion-state-machine-logs
      RetentionInDays: 365

  ####################################################################
  #                                                                  #
  # PostAnswerStateMachine                                           #
  #                                                                  #
  ####################################################################

  PostAnswerStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      Name: !Sub ${AWS::StackName}-PostAnswer
      DefinitionUri: ../step-functions/post-answer.asl.json
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt PostAnswerStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateAuthCodeFunction
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        # - DynamoDBReadPolicy:
        #     TableName: !Ref PersonalIdentityTable
        - DynamoDBWritePolicy:
            TableName: !Ref QuestionsTable
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt PostIvqAnswersStateMachine.Name
        - LambdaInvokePolicy:
            FunctionName: !Ref ExecuteStateMachineFunction
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      DefinitionSubstitutions:
        CommonStackName: !Ref CommonStackName
        CreateAuthCodeFunctionArn: !GetAtt CreateAuthCodeFunction.Arn
        AnswersIvqStateMachine: !Ref PostIvqAnswersStateMachine
        QuestionsTableName: !Ref QuestionsTable
        ExecuteStateMachineFunctionName: !Ref ExecuteStateMachineFunction
        # PersonalIdentityTableName: !Ref PersonalIdentityTable

  PostAnswerStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-PostAnswer-state-machine-logs
      RetentionInDays: 365

  ####################################################################
  #                                                                  #
  # PostIvqAnswersStateMachine                                       #
  #                                                                  #
  ####################################################################

  PostIvqAnswersStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      Name: !Sub ${AWS::StackName}-PostIvqAnswers
      DefinitionUri: ../step-functions/post-ivq-answers.asl.json
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt PostIvqAnswersStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref QuestionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BearerTokenName}-??????
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: !Ref AnswersUrl
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: !Ref UserAgent
        - LambdaInvokePolicy:
            FunctionName: !Ref SubmitAnswerFunction
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      DefinitionSubstitutions:
        BearerTokenName: !Ref BearerTokenName
        AnswersUrlName: !Ref AnswersUrl
        UserAgentName: !Ref UserAgent
        PostIvqAnswersLambdaArn: !GetAtt SubmitAnswerFunction.Arn
        QuestionsTableName: !Ref QuestionsTable

  PostIvqAnswersStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-PostIvqAnswers-state-machine-logs
      RetentionInDays: 365

  ####################################################################
  #                                                                  #
  # IssueCredentialStateMachine                                      #
  #                                                                  #
  ####################################################################

  IssueCredentialStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      Name: !Sub ${AWS::StackName}-IssueCredential
      DefinitionUri: ../step-functions/issue-credential.asl.json
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt IssueCredentialStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${MaxJwtTtlParameter}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${JwtTtlUnitParameter}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiableCredentialKmsSigningKeyId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
        - LambdaInvokePolicy:
            FunctionName: !Ref TimeFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CredentialSubjectFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref EvidenceCheckDetailsFunction
        - Statement:
            Effect: Allow
            Action: kms:Sign
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt FetchQuestionsStateMachine.Name
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      DefinitionSubstitutions:
        QuestionsTableName: !Ref QuestionsTable
        MaxJwtTtlParameter: !Ref MaxJwtTtlParameter
        JwtTtlUnitParameter: !Ref JwtTtlUnitParameter
        TimeFunctionArn: !GetAtt TimeFunction.Arn
        CredentialSubjectFunctionArn: !GetAtt CredentialSubjectFunction.Arn
        EvidenceCheckDetailsFunctionArn: !GetAtt EvidenceCheckDetailsFunction.Arn
        CommonStackName: !Ref CommonStackName

  IssueCredentialStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-IssueCredential-state-machine-logs
      RetentionInDays: 30

  ####################################################################
  #                                                                  #
  # FetchQuestionsFunction                                           #
  #                                                                  #
  ####################################################################

  FetchQuestionsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/fetch-questions/src/fetch-questions-handler.lambdaHandler
      FunctionName: !Sub "${AWS::StackName}-fetchquestions"
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-fetchquestions"
          QUESTIONS_TABLE_NAME: !Ref QuestionsTable
      Timeout: 15
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref QuestionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  FetchQuestionsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${FetchQuestionsFunction}"
      RetentionInDays: 30

  ####################################################################
  #                                                                  #
  # TimeFunction                                                     #
  #                                                                  #
  ####################################################################

  TimeFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/issue-credential/src/time-handler.lambdaHandler
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  ####################################################################
  #                                                                  #
  # CurrentTimeFunction                                              #
  #                                                                  #
  ####################################################################

  CurrentTimeFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/time/src/current-time-handler.lambdaHandler
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  ####################################################################
  #                                                                  #
  # SubmitAnswerFunction                                             #
  #                                                                  #
  ####################################################################

  SubmitAnswerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/submit-answer/src/submit-answer-handler.lambdaHandler
      FunctionName: !Sub "${AWS::StackName}-submit-answer"
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-submit-answer"
      Timeout: 15
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  SubmitAnswerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${SubmitAnswerFunction}"
      RetentionInDays: 30

  ####################################################################
  #                                                                  #
  # CreateAuthCodeFunction                                           #
  #                                                                  #
  ####################################################################

  CreateAuthCodeFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/submit-answer/src/create-auth-code-handler.lambdaHandler
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  ####################################################################
  #                                                                  #
  # CredentialSubjectFunction                                        #
  #                                                                  #
  ####################################################################

  CredentialSubjectFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/credential-subject/src/credential-subject-handler.lambdaHandler
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  ####################################################################
  #                                                                  #
  # EvidenceCheckDetailsFunction                                     #
  #                                                                  #
  ####################################################################

  EvidenceCheckDetailsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/evidence-check-details/src/check-details-handler.lambdaHandler
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  ####################################################################
  #                                                                  #
  # Database Tables                                                  #
  #                                                                  #
  ####################################################################

  QuestionsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "questions-table-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: expiryDate
        Enabled: true

  ####################################################################
  #                                                                  #
  # API config                                                       #
  #                                                                  #
  ####################################################################

  # TODO

  ####################################################################
  #                                                                  #
  # Parameters                                                       #
  #                                                                  #
  ####################################################################

  MaxJwtTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /${AWS::StackName}/MaxJwtTtl
      Value: !FindInMap [MaxJwtTtl, Environment, !Ref Environment]
      Description: Default time to live for an JWT in (seconds)

  JwtTtlUnitParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /${AWS::StackName}/JwtTtlUnit
      Value: !FindInMap [JwtTtlUnit, Environment, !Ref Environment]
      Description: The unit for the time-to-live for an JWT e.g. (MONTHS)

  UserAgent:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /${AWS::StackName}/UserAgent
      Value: govuk-one-login
      Description: User agent for HMRC requests

  QuestionsUrl:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /${AWS::StackName}/QuestionsUrl
      Value: https://test-api.service.hmrc.gov.uk/individuals/verification/identity-verification-questions/questions
      Description: URL for HMRC /questions endpoint

  AnswersUrl:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /${AWS::StackName}/AnswersUrl
      Value: https://test-api.service.hmrc.gov.uk/individuals/verification/identity-verification-questions/answers
      Description: URL for HMRC /answers endpoint

####################################################################
#                                                                  #
# Alerts                                                           #
#                                                                  #
####################################################################

####################################################################
#                                                                  #
# Outputs                                                          #
#                                                                  #
####################################################################

Outputs:
  PublicApiGatewayId:
    Description: API Gateway ID of the public HMRC KBV CRI API
    Value: !Ref PublicKbvHmrcApi
    Export:
      Name: !Sub ${AWS::StackName}-PublicApiGatewayId
  PrivateApiGatewayId:
    Description: API Gateway ID of the private HMRC KBV CRI API
    Value: !Ref PrivateKbvHmrcApi
    Export:
      Name: !Sub ${AWS::StackName}-PrivateApiGatewayId
  FetchQuestionsStateMachineArn:
    Description: Exported for integration test
    Value: !Ref FetchQuestionsStateMachine
  QuestionStateMachineArn:
    Description: Exported for integration test
    Value: !Ref GetQuestionStateMachine
  PostAnswerStateMachineArn:
    Description: Exported for integration test
    Value: !Ref PostAnswerStateMachine
  PostIvqAnswersStateMachineArn:
    Description: Exported for integration test
    Value: !Ref PostIvqAnswersStateMachine
  CommonAPISessionTableName:
    Description: Exported for integration test (Common API session table name)
    Value: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
  CommonAPIPersonIdentityTableName:
    Description: Exported for integration test (Common API person identity table name)
    Value: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
  QuestionsTableName:
    Description: Exported for integration test
    Value: !Ref QuestionsTable
