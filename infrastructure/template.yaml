AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Digital Identity IPV CRI KBV HMRC API"

Parameters:
  CodeSigningEnabled:
    Type: "String"
    Default: "true"
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  BearerTokenName:
    Description: "The name of the bearer token parameter"
    Type: String
    # Temporary - solution to be changed once cross account behaviour implemented
    Default: "HMRCBearerToken"
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production
  CommonStackName:
    Description: "The name of the stack containing the common CRI lambdas/infra"
    Type: String
    Default: "common-cri-api"

Conditions:
  EnforceCodeSigning: !Equals
    - !Ref CodeSigningEnabled
    - true
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
  IsDevEnvironment: !Equals
    - !Ref Environment
    - dev
  IsNotDevEnvironment: !Not
    - Condition: IsDevEnvironment

Globals:
  Function:
    Runtime: nodejs18.x
    Architectures:
      - arm64
    Timeout: 3
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - EnforceCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue

Mappings:
  # Only numeric values should be assigned here
  MaxJwtTtlMapping:
    Environment:
      dev: 2
      build: 2
      staging: 6
      integration: 6
      production: 6

  # Permitted values: SECONDS,MINUTES,HOURS,DAYS,MONTHS,YEARS
  JwtTtlUnitMapping:
    Environment:
      dev: HOURS
      build: HOURS
      staging: MONTHS
      integration: MONTHS
      production: MONTHS

Resources:
  MaxJwtTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/MaxJwtTtl"
      Type: String
      Value: !FindInMap [MaxJwtTtlMapping, Environment, !Ref "Environment"]
      Description: default time to live for an JWT in (seconds)

  JwtTtlUnitParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/JwtTtlUnit"
      Type: String
      Value: !FindInMap [JwtTtlUnitMapping, Environment, !Ref Environment]
      Description: The unit for the time-to-live for an JWT e.g. (MONTHS)

  PublicKbvHmrcApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Public KBV HMRC CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PublicKbvHmrcApiAccessLogGroup}"
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-public"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: {} # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: "./public-api.yaml"
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  PublicKbvHmrcApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-${PublicKbvHmrcApi}-public-AccessLogs
      RetentionInDays: 365

  DevOnlyKbvHmrcApi:
    Type: AWS::Serverless::Api
    Condition: IsDevEnvironment
    Properties:
      Description: Private Dev KBV HMRC CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${DevOnlyKbvHmrcApiAccessLogGroup}"
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-dev-only-private"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1"
        paths:
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: "./private-api.yaml"
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  DevOnlyKbvHmrcApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsDevEnvironment
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-${DevOnlyKbvHmrcApi}-dev-only-AccessLogs
      RetentionInDays: 365

  PrivateKbvHmrcApi:
    Type: AWS::Serverless::Api
    Condition: IsNotDevEnvironment
    Properties:
      Description: Private KBV HMRC CRI API
      MethodSettings:
        - ResourcePath: "/*"
          LoggingLevel: INFO
          HttpMethod: "*"
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PrivateKbvHmrcApiAccessLogGroup}"
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-private"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1"
        paths:
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: "./private-api.yaml"
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: PRIVATE
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Action: "execute-api:Invoke"
              Effect: Allow
              Principal: "*"
              Resource:
                - "execute-api:/*"

  PrivateKbvHmrcApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsNotDevEnvironment
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-${PrivateKbvHmrcApi}-private-AccessLogs
      RetentionInDays: 365

  ExecuteStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to allow API gateway to execute step function
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: AllowStateMachineInvoke
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "states:StartExecution"
                  - "states:StartSyncExecution"
                Resource: "*"
      PermissionsBoundary:
        !If [
          UsePermissionsBoundary,
          !Ref PermissionsBoundary,
          !Ref AWS::NoValue,
        ]

  ExecuteStateMachineFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/execute-state-machine
      Handler: execute-state-machine-handler.lambdaHandler
      Timeout: 60
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - states:StartSyncExecution
              - states:StartExecution
            Resource:
              - !Ref GetIvqQuestionsStateMachine
              - !Ref PostIvqAnswersStateMachine
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/execute-state-machine-handler.ts

  SubmitAnswerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/submit-answer
      Handler: submit-answer-handler.lambdaHandler
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/submit-answer-handler.ts

  FetchQuestionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/fetch-questions
      Handler: fetch-questions-handler.lambdaHandler
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/fetch-questions-handler.ts

  UserAgent:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/UserAgent"
      Value: govuk-one-login
      Type: String
      Description: User agent for HMRC requests

  QuestionsUrl:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/QuestionsUrl"
      Value: https://test-api.service.hmrc.gov.uk/individuals/verification/identity-verification-questions/questions
      Type: String
      Description: URL for HMRC /questions endpoint

  AnswersUrl:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/AnswersUrl"
      Value: https://test-api.service.hmrc.gov.uk/individuals/verification/identity-verification-questions/answers
      Type: String
      Description: URL for HMRC /answers endpoint

  QuestionsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "${AWS::StackName}-questions"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
        - AttributeName: "questionKey"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
        - AttributeName: "questionKey"
          KeyType: "RANGE"

  # Temporary - remove once common lambdas deployed
  PersonalIdentityTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "${AWS::StackName}-personal-identity"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"

  GetIvqQuestionsStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ../step-functions/get-ivq-questions.asl.json
      Type: EXPRESS
      DefinitionSubstitutions:
        QuestionsTableName: !Ref QuestionsTable
        QuestionsUrl: !Ref QuestionsUrl
        UserAgent: !Ref UserAgent
        FetchQuestionsArn: !GetAtt FetchQuestionsFunction.Arn
        BearerTokenName: !Ref BearerTokenName
      Name: !Sub "${AWS::StackName}-GetIvqQuestions"
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt GetIvqQuestionsStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref QuestionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BearerTokenName}-??????
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchQuestionsFunction
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/QuestionsUrl"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/UserAgent"
        - Statement:
            Effect: Allow
            Action:
              - logs:*
            Resource:
              - "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  GetIvqQuestionsStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-GetIvqQuestions-state-machine-logs
      RetentionInDays: 365

  GetQuestionStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ../step-functions/get-question.asl.json
      Type: EXPRESS
      Name: !Sub "${AWS::StackName}-GetQuestion"
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt GetQuestionStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref PersonalIdentityTable
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt GetIvqQuestionsStateMachine.Name
        - LambdaInvokePolicy:
            FunctionName: !Ref ExecuteStateMachineFunction
        - Statement:
            Effect: Allow
            Action:
              - logs:*
            Resource:
              - "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      DefinitionSubstitutions:
        PersonalIdentityTableName: !Ref PersonalIdentityTable
        ExecuteStateMachineFunctionName: !Ref ExecuteStateMachineFunction
        QuestionsTableName: !Ref "QuestionsTable"
        GetIvqQuestionsStateMachineArn: !GetAtt GetIvqQuestionsStateMachine.Arn

  GetQuestionStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-GetQuestion-state-machine-logs
      RetentionInDays: 365

  PostAnswerStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-PostAnswer-state-machine-logs
      RetentionInDays: 365

  PostIvqAnswersStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-PostIvqAnswers-state-machine-logs
      RetentionInDays: 365

  PostAnswerStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: ../step-functions/post-answer.asl.json
      Name: !Sub "${AWS::StackName}-PostAnswer"
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt PostAnswerStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref PersonalIdentityTable
        - DynamoDBWritePolicy:
            TableName: !Ref QuestionsTable
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt PostIvqAnswersStateMachine.Name
        - LambdaInvokePolicy:
            FunctionName: !Ref ExecuteStateMachineFunction
        - Statement:
            Effect: Allow
            Action:
              - logs:*
            Resource:
              - "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      DefinitionSubstitutions:
        AnswersIvqStateMachine: !Ref "PostIvqAnswersStateMachine"
        QuestionsTableName: !Ref "QuestionsTable"
        ExecuteStateMachineFunctionName: !Ref "ExecuteStateMachineFunction"
        PersonalIdentityTableName: !Ref "PersonalIdentityTable"

  PostIvqAnswersStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: ../step-functions/post-ivq-answers.asl.json
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt PostIvqAnswersStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref QuestionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BearerTokenName}-??????"
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: !Ref AnswersUrl
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: !Ref UserAgent
        - LambdaInvokePolicy:
            FunctionName: !Ref SubmitAnswerFunction
        - Statement:
            Effect: Allow
            Action:
              - logs:*
            Resource:
              - "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Name: !Sub "${AWS::StackName}-PostIvqAnswers"
      DefinitionSubstitutions:
        BearerTokenName: !Ref BearerTokenName
        AnswersUrlName: !Ref AnswersUrl
        UserAgentName: !Ref UserAgent
        PostIvqAnswersLambdaArn: !GetAtt SubmitAnswerFunction.Arn
        QuestionsTableName: !Ref QuestionsTable

  TimeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/issue-credential
      Handler: time-handler.lambdaHandler
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/time-handler.ts

  IssueCredentialStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ../step-functions/issue-credential.asl.json
      Type: EXPRESS
      Name: !Sub "${AWS::StackName}-IssueCredential"
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt IssueCredentialStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/MaxJwtTtl"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/JwtTtlUnit"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiableCredentialKmsSigningKeyId"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - LambdaInvokePolicy:
            FunctionName: !Ref TimeFunction
        - Statement:
            Effect: Allow
            Action:
              - kms:Sign
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt GetIvqQuestionsStateMachine.Name
        - Statement:
            Effect: Allow
            Action:
              - logs:*
            Resource:
              - "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      DefinitionSubstitutions:
        QuestionsTableName: !Ref QuestionsTable
        MaxJwtTtlParameter: !Ref MaxJwtTtlParameter
        JwtTtlUnitParameter: !Ref JwtTtlUnitParameter
        TimeFunctionArn: !GetAtt TimeFunction.Arn

  IssueCredentialStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-IssueCredential-state-machine-logs
      RetentionInDays: 30

Outputs:
  ExecuteStateMachineFunction:
    Description: "ExecuteStateMachine Lambda Function ARN"
    Value: !GetAtt ExecuteStateMachineFunction.Arn
  ExecuteStateMachineFunctionIamRole:
    Description: "Implicit IAM Role created for ExecuteStateMachine function"
    Value: !GetAtt ExecuteStateMachineFunctionRole.Arn

  SubmitAnswerFunction:
    Description: "SubmitAnswer Lambda Function ARN"
    Value: !GetAtt SubmitAnswerFunction.Arn
  SubmitAnswerFunctionIamRole:
    Description: "Implicit IAM Role created for SubmitAnswer function"
    Value: !GetAtt SubmitAnswerFunctionRole.Arn

  FetchQuestionsFunction:
    Description: "FetchQuestions Lambda Function ARN"
    Value: !GetAtt FetchQuestionsFunction.Arn
  FetchQuestionsFunctionIamRole:
    Description: "Implicit IAM Role created for FetchQuestions function"
    Value: !GetAtt FetchQuestionsFunctionRole.Arn

  TimeFunction:
    Description: "Time Lambda Function ARN"
    Value: !GetAtt TimeFunction.Arn

  TimeFunctionRoleArn:
    Description: "TimeFunctionRole Arn"
    Value: !GetAtt TimeFunctionRole.Arn
